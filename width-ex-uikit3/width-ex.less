// Name:         Width extended
// Description:  Utilities for widths, *-7 .. *-30 cols
//
// Component:   `uk-child-width-*`
//              `uk-width-*`
//              `uk-pull-*`
//              `uk-push-*`
//
// ========================================================================


@breakpoint-small:                             640px;  // Phone landscape
@breakpoint-medium:                            960px;  // Tablet Landscape
@breakpoint-large:                             1200px; // Desktop
@breakpoint-xlarge:                            1600px; // Large Screens

@breakpoint-xsmall-max:                        (@breakpoint-small - 1);
@breakpoint-small-max:                         (@breakpoint-medium - 1);
@breakpoint-medium-max:                        (@breakpoint-large - 1);
@breakpoint-large-max:                         (@breakpoint-xlarge - 1);


@breakpoint-xsmall:                            480px;  // Old phone landscape
@breakpoint-xxsmall-max:                       (@breakpoint-xsmall - 1);

@width-small-width:                            150px;
@width-medium-width:                           300px;
@width-large-width:                            450px;
@width-xlarge-width:                           600px;
@width-xxlarge-width:                          750px;


/* ========================================================================
   Component: Width extended
 ========================================================================== */

@col-7:                                         true;
@col-8:                                         true;
@col-9:                                         true;
@col-10:                                        true;
@col-11:                                        true;
@col-12:                                        true;
@col-13:                                        true;
@col-14:                                        true;
@col-15:                                        true;
@col-16:                                        true;
@col-17:                                        true;
@col-18:                                        true;
@col-19:                                        true;
@col-20:                                        true;
@col-21:                                        true;
@col-22:                                        true;
@col-23:                                        true;
@col-24:                                        true;
@col-25:                                        true;
@col-26:                                        true;
@col-27:                                        true;
@col-28:                                        true;
@col-29:                                        true;
@col-30:                                        true;

@pull:                                          true;
@push:                                          true;


/* Mixins
 ========================================================================== */

.getProperty(@col: 1, @cols: 1, @val: ~'width', @m: false)
{
	@v: floor( @col * (100% / @cols) * 1000 ) / 1000;
	& when not (@m) { @{val}: @v; }
	& when (@m) { @{val}: -@v; }
}

.generate-column(@cl, @sfx: none, @i: 7) when (@i =< 30) {
	
	@col: 'col-@{i}';

	& when not (@sfx = none) {
		& when (@@col = true) {
			@{cl}@{i}@{sfx} > * { .getProperty(1, @i); }
		}
	}
	
	& when (@sfx = none) {
		& when (@@col = true) {
			@{cl}@{i} > * { .getProperty(1, @i); }
		}
	}

	.generate-column(@cl, @sfx, @i + 1);
}
	
.getCols(@cl, @c, @sfx: none, @val: ~'width', @m: false, @i: 1) when (@i < @c)
{
	& when not (@sfx = none) {
		@{cl}@{i}-@{c}@{sfx} { .getProperty(@i, @c, @val, @m); }
	}
	
	& when (@sfx = none) {
		@{cl}@{i}-@{c} { .getProperty(@i, @c, @val, @m); }
	}
	
	.getCols(@cl, @i + 1, @c, @sfx, @val, @m);
}

.generate-columns(@cl, @sfx: none, @val: ~'width', @m: false, @i: 7) when (@i =< 30) {

	@col: 'col-@{i}';

	& when (@@col = true) {
		.getCols(@cl, @i, @sfx, @val, @m);
	}

	.generate-columns(@cl, @sfx, @val, @m, @i + 1);
}


/* Equal child widths
========================================================================== */

[class*='uk-child-width'] > *
{
    box-sizing: border-box;
    width: 100%;
}

.uk-child-width-auto > * { width: auto; }
.uk-child-width-expand > * { width: 1px; }
.uk-child-width-expand > :not([class*='uk-width'])
{
    flex: 1;
    min-width: 0;
    flex-basis: 1px;
}

.uk-child-width-1-1 > * { width: 100%; }
.uk-child-width-1-2 > * { .getProperty(1,2); }
.uk-child-width-1-3 > * { .getProperty(1,3); }
.uk-child-width-1-4 > * { .getProperty(1,4); }
.uk-child-width-1-5 > * { .getProperty(1,5); }
.uk-child-width-1-6 > * { .getProperty(1,6); }
.generate-column(~'.uk-child-width-1-');

/* Old phone landscape and bigger */
@media (min-width: @breakpoint-xsmall)
{

	.uk-child-width-auto\@xs > * { width: auto; }
	.uk-child-width-expand\@xs > * { width: 1px; }
	.uk-child-width-expand\@xs > :not([class*='uk-width'])
	{
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-child-width-1-1\@xs > * { width: 100%; }
	.uk-child-width-1-2\@xs > * { .getProperty(1,2); }
	.uk-child-width-1-3\@xs > * { .getProperty(1,3); }
	.uk-child-width-1-4\@xs > * { .getProperty(1,4); }
	.uk-child-width-1-5\@xs > * { .getProperty(1,5); }
	.uk-child-width-1-6\@xs > * { .getProperty(1,6); }
	.generate-column(~'.uk-child-width-1-', ~'\@xs');
	
}

/* Phone landscape and bigger */
@media (min-width: @breakpoint-small)
{

	.uk-child-width-auto\@s > * { width: auto; }
	.uk-child-width-expand\@s > * { width: 1px; }
	.uk-child-width-expand\@s > :not([class*='uk-width'])
	{
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-child-width-1-1\@s > * { width: 100%; }
	.uk-child-width-1-2\@s > * { .getProperty(1,2); }
	.uk-child-width-1-3\@s > * { .getProperty(1,3); }
	.uk-child-width-1-4\@s > * { .getProperty(1,4); }
	.uk-child-width-1-5\@s > * { .getProperty(1,5); }
	.uk-child-width-1-6\@s > * { .getProperty(1,6); }
	.generate-column(~'.uk-child-width-1-', ~'\@s');

}

/* Tablet landscape and bigger */
@media (min-width: @breakpoint-medium)
{

	.uk-child-width-auto\@m > * { width: auto; }
	.uk-child-width-expand\@m > * { width: 1px; }
	.uk-child-width-expand\@m > :not([class*='uk-width'])
	{
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-child-width-1-1\@m > * { width: 100%; }
	.uk-child-width-1-2\@m > * { .getProperty(1,2); }
	.uk-child-width-1-3\@m > * { .getProperty(1,3); }
	.uk-child-width-1-4\@m > * { .getProperty(1,4); }
	.uk-child-width-1-5\@m > * { .getProperty(1,5); }
	.uk-child-width-1-6\@m > * { .getProperty(1,6); }
	.generate-column(~'.uk-child-width-1-', ~'\@m');

}

/* Desktop and bigger */
@media (min-width: @breakpoint-large)
{

	.uk-child-width-auto\@l > * { width: auto; }
	.uk-child-width-expand\@l > * { width: 1px; }
	.uk-child-width-expand\@l > :not([class*='uk-width'])
	{
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-child-width-1-1\@l > * { width: 100%; }
	.uk-child-width-1-2\@l > * { .getProperty(1,2); }
	.uk-child-width-1-3\@l > * { .getProperty(1,3); }
	.uk-child-width-1-4\@l > * { .getProperty(1,4); }
	.uk-child-width-1-5\@l > * { .getProperty(1,5); }
	.uk-child-width-1-6\@l > * { .getProperty(1,6); }
	.generate-column(~'.uk-child-width-1-', ~'\@l');

}

/* Large screen and bigger */
@media (min-width: @breakpoint-xlarge)
{

	.uk-child-width-auto\@xl > * { width: auto; }
	.uk-child-width-expand\@xl > * { width: 1px; }
	.uk-child-width-expand\@xl > :not([class*='uk-width'])
	{
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-child-width-1-1\@xl > * { width: 100%; }
	.uk-child-width-1-2\@xl > * { .getProperty(1,2); }
	.uk-child-width-1-3\@xl > * { .getProperty(1,3); }
	.uk-child-width-1-4\@xl > * { .getProperty(1,4); }
	.uk-child-width-1-5\@xl > * { .getProperty(1,5); }
	.uk-child-width-1-6\@xl > * { .getProperty(1,6); }
	.generate-column(~'.uk-child-width-1-', ~'\@xl');

}


/* Single Widths
 ========================================================================== */

[class*='uk-width']
{
    box-sizing: border-box;
    width: 100%;
    max-width: 100%;
}

.uk-width-small { width: @width-small-width; }
.uk-width-medium { width: @width-medium-width; }
.uk-width-large { width: @width-large-width; }
.uk-width-xlarge { width: @width-xlarge-width; }
.uk-width-xxlarge { width: @width-xxlarge-width; }

.uk-width-auto { width: auto; }
.uk-width-expand
{
    width: 1px;
    flex: 1;
    min-width: 0;
    flex-basis: 1px;
}

.uk-width-1-1 { width: 100%; }
.getCols(~'.uk-width-', 2);
.getCols(~'.uk-width-', 3);
.getCols(~'.uk-width-', 4);
.getCols(~'.uk-width-', 5);
.getCols(~'.uk-width-', 6);
.generate-columns(~'.uk-width-');

/* Old phone landscape and bigger */
@media (min-width: @breakpoint-xsmall)
{

	.uk-width-small\@xs { width: @width-small-width; }
	.uk-width-medium\@xs { width: @width-medium-width; }
	.uk-width-large\@xs { width: @width-large-width; }
	.uk-width-xlarge\@xs { width: @width-xlarge-width; }
	.uk-width-xxlarge\@xs { width: @width-xxlarge-width; }
	
	.uk-width-auto\@xs { width: auto; }
	.uk-width-expand\@xs
	{
		width: 1px;
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-width-1-1\@xs { width: 100%; }
	.getCols(~'.uk-width-', 2, ~'\@xs');
	.getCols(~'.uk-width-', 3, ~'\@xs');
	.getCols(~'.uk-width-', 4, ~'\@xs');
	.getCols(~'.uk-width-', 5, ~'\@xs');
	.getCols(~'.uk-width-', 6, ~'\@xs');
	.generate-columns(~'.uk-width-', ~'\@xs');

}

/* Phone landscape and bigger */
@media (min-width: @breakpoint-small)
{

	.uk-width-small\@s { width: @width-small-width; }
	.uk-width-medium\@s { width: @width-medium-width; }
	.uk-width-large\@s { width: @width-large-width; }
	.uk-width-xlarge\@s { width: @width-xlarge-width; }
	.uk-width-xxlarge\@s { width: @width-xxlarge-width; }
	
	.uk-width-auto\@s { width: auto; }
	.uk-width-expand\@s
	{
		width: 1px;
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-width-1-1\@s { width: 100%; }
	.getCols(~'.uk-width-', 2, ~'\@s');
	.getCols(~'.uk-width-', 3, ~'\@s');
	.getCols(~'.uk-width-', 4, ~'\@s');
	.getCols(~'.uk-width-', 5, ~'\@s');
	.getCols(~'.uk-width-', 6, ~'\@s');
	.generate-columns(~'.uk-width-', ~'\@s');

}

/* Tablet landscape and bigger */
@media (min-width: @breakpoint-medium)
{

	.uk-width-small\@m { width: @width-small-width; }
	.uk-width-medium\@m { width: @width-medium-width; }
	.uk-width-large\@m { width: @width-large-width; }
	.uk-width-xlarge\@m { width: @width-xlarge-width; }
	.uk-width-xxlarge\@m { width: @width-xxlarge-width; }
	
	.uk-width-auto\@m { width: auto; }
	.uk-width-expand\@m
	{
		width: 1px;
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-width-1-1\@m { width: 100%; }
	.getCols(~'.uk-width-', 2, ~'\@m');
	.getCols(~'.uk-width-', 3, ~'\@m');
	.getCols(~'.uk-width-', 4, ~'\@m');
	.getCols(~'.uk-width-', 5, ~'\@m');
	.getCols(~'.uk-width-', 6, ~'\@m');
	.generate-columns(~'.uk-width-', ~'\@m');

}

/* Desktop and bigger */
@media (min-width: @breakpoint-large)
{

	.uk-width-small\@l { width: @width-small-width; }
	.uk-width-medium\@l { width: @width-medium-width; }
	.uk-width-large\@l { width: @width-large-width; }
	.uk-width-xlarge\@l { width: @width-xlarge-width; }
	.uk-width-xxlarge\@l { width: @width-xxlarge-width; }
	
	.uk-width-auto\@l { width: auto; }
	.uk-width-expand\@l
	{
		width: 1px;
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-width-1-1\@l { width: 100%; }
	.getCols(~'.uk-width-', 2, ~'\@l');
	.getCols(~'.uk-width-', 3, ~'\@l');
	.getCols(~'.uk-width-', 4, ~'\@l');
	.getCols(~'.uk-width-', 5, ~'\@l');
	.getCols(~'.uk-width-', 6, ~'\@l');
	.generate-columns(~'.uk-width-', ~'\@l');

}

/* Large screen and bigger */
@media (min-width: @breakpoint-xlarge)
{

	.uk-width-small\@xl { width: @width-small-width; }
	.uk-width-medium\@xl { width: @width-medium-width; }
	.uk-width-large\@xl { width: @width-large-width; }
	.uk-width-xlarge\@xl { width: @width-xlarge-width; }
	.uk-width-xxlarge\@xl { width: @width-xxlarge-width; }
	
	.uk-width-auto\@xl { width: auto; }
	.uk-width-expand\@xl
	{
		width: 1px;
		flex: 1;
		min-width: 0;
		flex-basis: 1px;
	}
	
	.uk-width-1-1\@xl { width: 100%; }
	.getCols(~'.uk-width-', 2, ~'\@xl');
	.getCols(~'.uk-width-', 3, ~'\@xl');
	.getCols(~'.uk-width-', 4, ~'\@xl');
	.getCols(~'.uk-width-', 5, ~'\@xl');
	.getCols(~'.uk-width-', 6, ~'\@xl');
	.generate-columns(~'.uk-width-', ~'\@xl');

}


/* Sub-object: `uk-push-*` and `uk-pull-*`
 ========================================================================== */

& when (@push  = true) {
	
	[class*="uk-push-"]
	{
		position: relative;
	}
	
	.getCols(~'.uk-push-', 2, none, ~'left');
	.getCols(~'.uk-push-', 3, none, ~'left');
	.getCols(~'.uk-push-', 4, none, ~'left');
	.getCols(~'.uk-push-', 5, none, ~'left');
	.getCols(~'.uk-push-', 6, none, ~'left');
	.generate-columns(~'.uk-push-', none, ~'left');
	
}

& when (@pull  = true) {
	
	[class*="uk-pull-"]
	{
		position: relative;
	}
	
	.getCols(~'.uk-pull-', 2, none, ~'left', true);
	.getCols(~'.uk-pull-', 3, none, ~'left', true);
	.getCols(~'.uk-pull-', 4, none, ~'left', true);
	.getCols(~'.uk-pull-', 5, none, ~'left', true);
	.getCols(~'.uk-pull-', 6, none, ~'left', true);
	.generate-columns(~'.uk-pull-', none, ~'left', true);
	
}
	
/* Old phone landscape and bigger */
@media (min-width: @breakpoint-xsmall) {
	
	& when (@push  = true) {
		
		.getCols(~'.uk-push-', 2, ~'\@xs', ~'left');
		.getCols(~'.uk-push-', 3, ~'\@xs', ~'left');
		.getCols(~'.uk-push-', 4, ~'\@xs', ~'left');
		.getCols(~'.uk-push-', 5, ~'\@xs', ~'left');
		.getCols(~'.uk-push-', 6, ~'\@xs', ~'left');
		.generate-columns(~'.uk-push-', ~'\@xs', ~'left');
		
	}
	
	& when (@pull  = true) {
		
		.getCols(~'.uk-pull-', 2, ~'\@xs', ~'left', true);
		.getCols(~'.uk-pull-', 3, ~'\@xs', ~'left', true);
		.getCols(~'.uk-pull-', 4, ~'\@xs', ~'left', true);
		.getCols(~'.uk-pull-', 5, ~'\@xs', ~'left', true);
		.getCols(~'.uk-pull-', 6, ~'\@xs', ~'left', true);
		.generate-columns(~'.uk-pull-', ~'\@xs', ~'left', true);
		
	}
	
}
	
/* Phone landscape and bigger */
@media (min-width: @breakpoint-small) {
	
	& when (@push  = true) {
		
		.getCols(~'.uk-push-', 2, ~'\@s', ~'left');
		.getCols(~'.uk-push-', 3, ~'\@s', ~'left');
		.getCols(~'.uk-push-', 4, ~'\@s', ~'left');
		.getCols(~'.uk-push-', 5, ~'\@s', ~'left');
		.getCols(~'.uk-push-', 6, ~'\@s', ~'left');
		.generate-columns(~'.uk-push-', ~'\@s', ~'left');
		
	}
	
	& when (@pull  = true) {
		
		.getCols(~'.uk-pull-', 2, ~'\@s', ~'left', true);
		.getCols(~'.uk-pull-', 3, ~'\@s', ~'left', true);
		.getCols(~'.uk-pull-', 4, ~'\@s', ~'left', true);
		.getCols(~'.uk-pull-', 5, ~'\@s', ~'left', true);
		.getCols(~'.uk-pull-', 6, ~'\@s', ~'left', true);
		.generate-columns(~'.uk-pull-', ~'\@s', ~'left', true);
		
	}
	
}

/* Tablet landscape and bigger */
@media (min-width: @breakpoint-medium) {

	& when (@push  = true) {

		.getCols(~'.uk-push-', 2, ~'\@m', ~'left');
		.getCols(~'.uk-push-', 3, ~'\@m', ~'left');
		.getCols(~'.uk-push-', 4, ~'\@m', ~'left');
		.getCols(~'.uk-push-', 5, ~'\@m', ~'left');
		.getCols(~'.uk-push-', 6, ~'\@m', ~'left');
		.generate-columns(~'.uk-push-', ~'\@m', ~'left');

	}

	& when (@pull  = true) {

		.getCols(~'.uk-pull-', 2, ~'\@m', ~'left', true);
		.getCols(~'.uk-pull-', 3, ~'\@m', ~'left', true);
		.getCols(~'.uk-pull-', 4, ~'\@m', ~'left', true);
		.getCols(~'.uk-pull-', 5, ~'\@m', ~'left', true);
		.getCols(~'.uk-pull-', 6, ~'\@m', ~'left', true);
		.generate-columns(~'.uk-pull-', ~'\@m', ~'left', true);

	}

}

/* Desktop and bigger */
@media (min-width: @breakpoint-large) {

	& when (@push  = true) {

		.getCols(~'.uk-push-', 2, ~'\@l', ~'left');
		.getCols(~'.uk-push-', 3, ~'\@l', ~'left');
		.getCols(~'.uk-push-', 4, ~'\@l', ~'left');
		.getCols(~'.uk-push-', 5, ~'\@l', ~'left');
		.getCols(~'.uk-push-', 6, ~'\@l', ~'left');
		.generate-columns(~'.uk-push-', ~'\@l', ~'left');

	}

	& when (@pull  = true) {

		.getCols(~'.uk-pull-', 2, ~'\@l', ~'left', true);
		.getCols(~'.uk-pull-', 3, ~'\@l', ~'left', true);
		.getCols(~'.uk-pull-', 4, ~'\@l', ~'left', true);
		.getCols(~'.uk-pull-', 5, ~'\@l', ~'left', true);
		.getCols(~'.uk-pull-', 6, ~'\@l', ~'left', true);
		.generate-columns(~'.uk-pull-', ~'\@l', ~'left', true);

	}

}

/* Large screen and bigger */
@media (min-width: @breakpoint-xlarge) {

	& when (@push  = true) {

		.getCols(~'.uk-push-', 2, ~'\@xl', ~'left');
		.getCols(~'.uk-push-', 3, ~'\@xl', ~'left');
		.getCols(~'.uk-push-', 4, ~'\@xl', ~'left');
		.getCols(~'.uk-push-', 5, ~'\@xl', ~'left');
		.getCols(~'.uk-push-', 6, ~'\@xl', ~'left');
		.generate-columns(~'.uk-push-', ~'\@xl', ~'left');

	}

	& when (@pull  = true) {

		.getCols(~'.uk-pull-', 2, ~'\@xl', ~'left', true);
		.getCols(~'.uk-pull-', 3, ~'\@xl', ~'left', true);
		.getCols(~'.uk-pull-', 4, ~'\@xl', ~'left', true);
		.getCols(~'.uk-pull-', 5, ~'\@xl', ~'left', true);
		.getCols(~'.uk-pull-', 6, ~'\@xl', ~'left', true);
		.generate-columns(~'.uk-pull-', ~'\@xl', ~'left', true);

	}

}


// Hooks
// ========================================================================

.hook-width-misc;
.hook-width-misc() {}

.hook-width-ex-misc;
.hook-width-ex-misc() {}
